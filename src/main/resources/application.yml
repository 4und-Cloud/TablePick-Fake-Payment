server:
  port: 8082

spring:
  application:
    name: payment-service

  datasource:
    url: ${DB_HOST}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      idle-timeout: 10000
      max-lifetime: 30000
      connection-timeout: 30000

  task:
    execution:
      pool:
        core-size: 10
        max-size: 50
        queue-capacity: 100

  sql:
    init:
      mode: never

  kafka:
    bootstrap-servers: ${KAFKA_HOST} # 환경 변수 KAFKA_HOST를 사용
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer # JsonSerializer 사용
      acks: all
      retries: 3
    consumer:
      group-id: payment-group # 결제 서버의 컨슈머 그룹 ID
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: true
      auto-commit-interval: 500
      auto-offset-reset: latest
      properties:
        spring.json.trusted.packages: "com.goorm.tablepick.payment.event.model.*" # 결제 이벤트 모델만 신뢰해도 됨

    jackson:
      serialization:
        write-dates-as-timestamps: false
